<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TestSuite" time="2.203" tests="226" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="sun.boot.library.path" value="/root/jdk1.8.0_101/jre/lib/amd64"/>
    <property name="java.vm.version" value="25.101-b13"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="maven.multiModuleProjectDirectory" value="/root/pubsoftware/apache-storm-1.1.1/examples/storm-starter"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=":"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/root/pubsoftware/apache-storm-1.1.1/examples/storm-starter"/>
    <property name="java.runtime.version" value="1.8.0_101-b13"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="java.endorsed.dirs" value="/root/jdk1.8.0_101/jre/lib/endorsed"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="os.name" value="Linux"/>
    <property name="classworlds.conf" value="/root/pubsoftware/apache-maven-3.5.2/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib"/>
    <property name="maven.conf" value="/root/pubsoftware/apache-maven-3.5.2/conf"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="52.0"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="3.10.0-327.el7.x86_64"/>
    <property name="library.jansi.path" value="/root/pubsoftware/apache-maven-3.5.2/lib/jansi-native"/>
    <property name="user.home" value="/root"/>
    <property name="user.timezone" value="America/Los_Angeles"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="user.name" value="root"/>
    <property name="java.class.path" value="/root/pubsoftware/apache-maven-3.5.2/boot/plexus-classworlds-2.5.2.jar"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.home" value="/root/jdk1.8.0_101/jre"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher package"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="en"/>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.8.0_101"/>
    <property name="java.ext.dirs" value="/root/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext"/>
    <property name="securerandom.source" value="file:/dev/./urandom"/>
    <property name="sun.boot.class.path" value="/root/jdk1.8.0_101/jre/lib/resources.jar:/root/jdk1.8.0_101/jre/lib/rt.jar:/root/jdk1.8.0_101/jre/lib/sunrsasign.jar:/root/jdk1.8.0_101/jre/lib/jsse.jar:/root/jdk1.8.0_101/jre/lib/jce.jar:/root/jdk1.8.0_101/jre/lib/charsets.jar:/root/jdk1.8.0_101/jre/lib/jfr.jar:/root/jdk1.8.0_101/jre/classes"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="maven.home" value="/root/pubsoftware/apache-maven-3.5.2"/>
    <property name="file.separator" value="/"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase name="negativeOrZeroEmitFrequencyShouldThrowIAE" classname="org.apache.storm.starter.bolt.TotalRankingsBoltTest" time="1.409"/>
  <testcase name="negativeOrZeroEmitFrequencyShouldThrowIAE" classname="org.apache.storm.starter.bolt.TotalRankingsBoltTest" time="0"/>
  <testcase name="negativeOrZeroEmitFrequencyShouldThrowIAE" classname="org.apache.storm.starter.bolt.TotalRankingsBoltTest" time="0"/>
  <testcase name="negativeOrZeroEmitFrequencyShouldThrowIAE" classname="org.apache.storm.starter.bolt.TotalRankingsBoltTest" time="0"/>
  <testcase name="negativeOrZeroEmitFrequencyShouldThrowIAE" classname="org.apache.storm.starter.bolt.TotalRankingsBoltTest" time="0"/>
  <testcase name="negativeOrZeroTopNShouldThrowIAE" classname="org.apache.storm.starter.bolt.TotalRankingsBoltTest" time="0"/>
  <testcase name="negativeOrZeroTopNShouldThrowIAE" classname="org.apache.storm.starter.bolt.TotalRankingsBoltTest" time="0"/>
  <testcase name="negativeOrZeroTopNShouldThrowIAE" classname="org.apache.storm.starter.bolt.TotalRankingsBoltTest" time="0"/>
  <testcase name="negativeOrZeroTopNShouldThrowIAE" classname="org.apache.storm.starter.bolt.TotalRankingsBoltTest" time="0"/>
  <testcase name="negativeOrZeroTopNShouldThrowIAE" classname="org.apache.storm.starter.bolt.TotalRankingsBoltTest" time="0"/>
  <testcase name="positiveEmitFrequencyShouldBeOk" classname="org.apache.storm.starter.bolt.TotalRankingsBoltTest" time="0.014"/>
  <testcase name="positiveEmitFrequencyShouldBeOk" classname="org.apache.storm.starter.bolt.TotalRankingsBoltTest" time="0"/>
  <testcase name="positiveEmitFrequencyShouldBeOk" classname="org.apache.storm.starter.bolt.TotalRankingsBoltTest" time="0"/>
  <testcase name="positiveEmitFrequencyShouldBeOk" classname="org.apache.storm.starter.bolt.TotalRankingsBoltTest" time="0"/>
  <testcase name="positiveTopNShouldBeOk" classname="org.apache.storm.starter.bolt.TotalRankingsBoltTest" time="0"/>
  <testcase name="positiveTopNShouldBeOk" classname="org.apache.storm.starter.bolt.TotalRankingsBoltTest" time="0"/>
  <testcase name="positiveTopNShouldBeOk" classname="org.apache.storm.starter.bolt.TotalRankingsBoltTest" time="0"/>
  <testcase name="positiveTopNShouldBeOk" classname="org.apache.storm.starter.bolt.TotalRankingsBoltTest" time="0.004"/>
  <testcase name="shouldDeclareOutputFields" classname="org.apache.storm.starter.bolt.TotalRankingsBoltTest" time="0.263"/>
  <testcase name="shouldEmitNothingIfNormalTupleIsReceived" classname="org.apache.storm.starter.bolt.TotalRankingsBoltTest" time="0.033"/>
  <testcase name="shouldEmitSomethingIfTickTupleIsReceived" classname="org.apache.storm.starter.bolt.TotalRankingsBoltTest" time="0.185"/>
  <testcase name="shouldSetTickTupleFrequencyInComponentConfigurationToNonZeroValue" classname="org.apache.storm.starter.bolt.TotalRankingsBoltTest" time="0.026"/>
  <testcase name="negativeOrZeroEmitFrequencyShouldThrowIAE" classname="org.apache.storm.starter.bolt.IntermediateRankingsBoltTest" time="0.013"/>
  <testcase name="negativeOrZeroEmitFrequencyShouldThrowIAE" classname="org.apache.storm.starter.bolt.IntermediateRankingsBoltTest" time="0"/>
  <testcase name="negativeOrZeroEmitFrequencyShouldThrowIAE" classname="org.apache.storm.starter.bolt.IntermediateRankingsBoltTest" time="0"/>
  <testcase name="negativeOrZeroEmitFrequencyShouldThrowIAE" classname="org.apache.storm.starter.bolt.IntermediateRankingsBoltTest" time="0"/>
  <testcase name="negativeOrZeroEmitFrequencyShouldThrowIAE" classname="org.apache.storm.starter.bolt.IntermediateRankingsBoltTest" time="0"/>
  <testcase name="negativeOrZeroTopNShouldThrowIAE" classname="org.apache.storm.starter.bolt.IntermediateRankingsBoltTest" time="0"/>
  <testcase name="negativeOrZeroTopNShouldThrowIAE" classname="org.apache.storm.starter.bolt.IntermediateRankingsBoltTest" time="0"/>
  <testcase name="negativeOrZeroTopNShouldThrowIAE" classname="org.apache.storm.starter.bolt.IntermediateRankingsBoltTest" time="0"/>
  <testcase name="negativeOrZeroTopNShouldThrowIAE" classname="org.apache.storm.starter.bolt.IntermediateRankingsBoltTest" time="0"/>
  <testcase name="negativeOrZeroTopNShouldThrowIAE" classname="org.apache.storm.starter.bolt.IntermediateRankingsBoltTest" time="0"/>
  <testcase name="positiveEmitFrequencyShouldBeOk" classname="org.apache.storm.starter.bolt.IntermediateRankingsBoltTest" time="0"/>
  <testcase name="positiveEmitFrequencyShouldBeOk" classname="org.apache.storm.starter.bolt.IntermediateRankingsBoltTest" time="0"/>
  <testcase name="positiveEmitFrequencyShouldBeOk" classname="org.apache.storm.starter.bolt.IntermediateRankingsBoltTest" time="0"/>
  <testcase name="positiveEmitFrequencyShouldBeOk" classname="org.apache.storm.starter.bolt.IntermediateRankingsBoltTest" time="0"/>
  <testcase name="positiveTopNShouldBeOk" classname="org.apache.storm.starter.bolt.IntermediateRankingsBoltTest" time="0"/>
  <testcase name="positiveTopNShouldBeOk" classname="org.apache.storm.starter.bolt.IntermediateRankingsBoltTest" time="0"/>
  <testcase name="positiveTopNShouldBeOk" classname="org.apache.storm.starter.bolt.IntermediateRankingsBoltTest" time="0"/>
  <testcase name="positiveTopNShouldBeOk" classname="org.apache.storm.starter.bolt.IntermediateRankingsBoltTest" time="0"/>
  <testcase name="shouldDeclareOutputFields" classname="org.apache.storm.starter.bolt.IntermediateRankingsBoltTest" time="0"/>
  <testcase name="shouldEmitNothingIfNormalTupleIsReceived" classname="org.apache.storm.starter.bolt.IntermediateRankingsBoltTest" time="0.02"/>
  <testcase name="shouldEmitSomethingIfTickTupleIsReceived" classname="org.apache.storm.starter.bolt.IntermediateRankingsBoltTest" time="0"/>
  <testcase name="shouldSetTickTupleFrequencyInComponentConfigurationToNonZeroValue" classname="org.apache.storm.starter.bolt.IntermediateRankingsBoltTest" time="0"/>
  <testcase name="shouldDeclareOutputFields" classname="org.apache.storm.starter.bolt.RollingCountBoltTest" time="0"/>
  <testcase name="shouldEmitNothingIfNoObjectHasBeenCountedYetAndTickTupleIsReceived" classname="org.apache.storm.starter.bolt.RollingCountBoltTest" time="0.104"/>
  <testcase name="shouldEmitSomethingIfAtLeastOneObjectWasCountedAndTickTupleIsReceived" classname="org.apache.storm.starter.bolt.RollingCountBoltTest" time="0.01"/>
  <testcase name="shouldSetTickTupleFrequencyInComponentConfigurationToNonZeroValue" classname="org.apache.storm.starter.bolt.RollingCountBoltTest" time="0"/>
  <testcase name="constructorWithNegativeCountAndFieldsShouldThrowIAE" classname="org.apache.storm.starter.tools.RankableObjectWithFieldsTest" time="0"/>
  <testcase name="constructorWithNegativeCountAndNoFieldsShouldThrowIAE" classname="org.apache.storm.starter.tools.RankableObjectWithFieldsTest" time="0"/>
  <testcase name="constructorWithNullObjectAndFieldsShouldThrowIAE" classname="org.apache.storm.starter.tools.RankableObjectWithFieldsTest" time="0"/>
  <testcase name="constructorWithNullObjectAndNoFieldsShouldThrowIAE" classname="org.apache.storm.starter.tools.RankableObjectWithFieldsTest" time="0"/>
  <testcase name="copyShouldReturnCopy" classname="org.apache.storm.starter.tools.RankableObjectWithFieldsTest" time="0"/>
  <testcase name="copyShouldReturnCopy" classname="org.apache.storm.starter.tools.RankableObjectWithFieldsTest" time="0"/>
  <testcase name="copyShouldReturnCopy" classname="org.apache.storm.starter.tools.RankableObjectWithFieldsTest" time="0"/>
  <testcase name="fieldsShouldBeImmutable" classname="org.apache.storm.starter.tools.RankableObjectWithFieldsTest" time="0"/>
  <testcase name="shouldBeEqualToItself" classname="org.apache.storm.starter.tools.RankableObjectWithFieldsTest" time="0"/>
  <testcase name="shouldBeEqualToTrueDuplicates" classname="org.apache.storm.starter.tools.RankableObjectWithFieldsTest" time="0.011"/>
  <testcase name="shouldBeEqualToTrueDuplicates" classname="org.apache.storm.starter.tools.RankableObjectWithFieldsTest" time="0"/>
  <testcase name="shouldBeEqualToTrueDuplicates" classname="org.apache.storm.starter.tools.RankableObjectWithFieldsTest" time="0"/>
  <testcase name="shouldCreateRankableObjectFromTuple" classname="org.apache.storm.starter.tools.RankableObjectWithFieldsTest" time="0.028"/>
  <testcase name="shouldHaveDifferentHashCodeThanFalseDuplicates" classname="org.apache.storm.starter.tools.RankableObjectWithFieldsTest" time="0"/>
  <testcase name="shouldHaveDifferentHashCodeThanFalseDuplicates" classname="org.apache.storm.starter.tools.RankableObjectWithFieldsTest" time="0.008"/>
  <testcase name="shouldHaveDifferentHashCodeThanFalseDuplicates" classname="org.apache.storm.starter.tools.RankableObjectWithFieldsTest" time="0"/>
  <testcase name="shouldHaveDifferentHashCodeThanFalseDuplicates" classname="org.apache.storm.starter.tools.RankableObjectWithFieldsTest" time="0"/>
  <testcase name="shouldHaveDifferentHashCodeThanFalseDuplicates" classname="org.apache.storm.starter.tools.RankableObjectWithFieldsTest" time="0"/>
  <testcase name="shouldHaveDifferentHashCodeThanFalseDuplicates" classname="org.apache.storm.starter.tools.RankableObjectWithFieldsTest" time="0"/>
  <testcase name="shouldHaveSameHashCodeAsTrueDuplicates" classname="org.apache.storm.starter.tools.RankableObjectWithFieldsTest" time="0"/>
  <testcase name="shouldHaveSameHashCodeAsTrueDuplicates" classname="org.apache.storm.starter.tools.RankableObjectWithFieldsTest" time="0"/>
  <testcase name="shouldHaveSameHashCodeAsTrueDuplicates" classname="org.apache.storm.starter.tools.RankableObjectWithFieldsTest" time="0.001"/>
  <testcase name="shouldNotBeEqualToFalseDuplicates" classname="org.apache.storm.starter.tools.RankableObjectWithFieldsTest" time="0.011"/>
  <testcase name="shouldNotBeEqualToFalseDuplicates" classname="org.apache.storm.starter.tools.RankableObjectWithFieldsTest" time="0"/>
  <testcase name="shouldNotBeEqualToFalseDuplicates" classname="org.apache.storm.starter.tools.RankableObjectWithFieldsTest" time="0"/>
  <testcase name="shouldNotBeEqualToFalseDuplicates" classname="org.apache.storm.starter.tools.RankableObjectWithFieldsTest" time="0"/>
  <testcase name="shouldNotBeEqualToFalseDuplicates" classname="org.apache.storm.starter.tools.RankableObjectWithFieldsTest" time="0"/>
  <testcase name="shouldNotBeEqualToFalseDuplicates" classname="org.apache.storm.starter.tools.RankableObjectWithFieldsTest" time="0.01"/>
  <testcase name="shouldNotBeEqualToInstancesOfOtherClasses" classname="org.apache.storm.starter.tools.RankableObjectWithFieldsTest" time="0"/>
  <testcase name="shouldNotBeEqualToInstancesOfOtherClasses" classname="org.apache.storm.starter.tools.RankableObjectWithFieldsTest" time="0"/>
  <testcase name="shouldNotBeEqualToInstancesOfOtherClasses" classname="org.apache.storm.starter.tools.RankableObjectWithFieldsTest" time="0"/>
  <testcase name="shouldNotBeEqualToInstancesOfOtherClasses" classname="org.apache.storm.starter.tools.RankableObjectWithFieldsTest" time="0"/>
  <testcase name="shouldReturnTheCount" classname="org.apache.storm.starter.tools.RankableObjectWithFieldsTest" time="0"/>
  <testcase name="shouldReturnTheFields" classname="org.apache.storm.starter.tools.RankableObjectWithFieldsTest" time="0"/>
  <testcase name="shouldReturnTheFields" classname="org.apache.storm.starter.tools.RankableObjectWithFieldsTest" time="0"/>
  <testcase name="shouldReturnTheObject" classname="org.apache.storm.starter.tools.RankableObjectWithFieldsTest" time="0.01"/>
  <testcase name="toStringShouldContainStringRepresentationsOfObjectAndCount" classname="org.apache.storm.starter.tools.RankableObjectWithFieldsTest" time="0.007"/>
  <testcase name="toStringShouldContainStringRepresentationsOfObjectAndCount" classname="org.apache.storm.starter.tools.RankableObjectWithFieldsTest" time="0"/>
  <testcase name="verifyCompareTo" classname="org.apache.storm.starter.tools.RankableObjectWithFieldsTest" time="0"/>
  <testcase name="verifyCompareTo" classname="org.apache.storm.starter.tools.RankableObjectWithFieldsTest" time="0"/>
  <testcase name="verifyCompareTo" classname="org.apache.storm.starter.tools.RankableObjectWithFieldsTest" time="0"/>
  <testcase name="verifyCompareTo" classname="org.apache.storm.starter.tools.RankableObjectWithFieldsTest" time="0"/>
  <testcase name="verifyCompareTo" classname="org.apache.storm.starter.tools.RankableObjectWithFieldsTest" time="0"/>
  <testcase name="verifyCompareTo" classname="org.apache.storm.starter.tools.RankableObjectWithFieldsTest" time="0"/>
  <testcase name="verifyCompareTo" classname="org.apache.storm.starter.tools.RankableObjectWithFieldsTest" time="0"/>
  <testcase name="verifyCompareTo" classname="org.apache.storm.starter.tools.RankableObjectWithFieldsTest" time="0"/>
  <testcase name="verifyCompareTo" classname="org.apache.storm.starter.tools.RankableObjectWithFieldsTest" time="0"/>
  <testcase name="verifyCompareTo" classname="org.apache.storm.starter.tools.RankableObjectWithFieldsTest" time="0"/>
  <testcase name="negativeOrZeroNumTimesToTrackShouldThrowIAE" classname="org.apache.storm.starter.tools.NthLastModifiedTimeTrackerTest" time="0"/>
  <testcase name="negativeOrZeroNumTimesToTrackShouldThrowIAE" classname="org.apache.storm.starter.tools.NthLastModifiedTimeTrackerTest" time="0"/>
  <testcase name="negativeOrZeroNumTimesToTrackShouldThrowIAE" classname="org.apache.storm.starter.tools.NthLastModifiedTimeTrackerTest" time="0"/>
  <testcase name="negativeOrZeroNumTimesToTrackShouldThrowIAE" classname="org.apache.storm.starter.tools.NthLastModifiedTimeTrackerTest" time="0"/>
  <testcase name="negativeOrZeroNumTimesToTrackShouldThrowIAE" classname="org.apache.storm.starter.tools.NthLastModifiedTimeTrackerTest" time="0"/>
  <testcase name="positiveNumTimesToTrackShouldBeOk" classname="org.apache.storm.starter.tools.NthLastModifiedTimeTrackerTest" time="0"/>
  <testcase name="positiveNumTimesToTrackShouldBeOk" classname="org.apache.storm.starter.tools.NthLastModifiedTimeTrackerTest" time="0"/>
  <testcase name="positiveNumTimesToTrackShouldBeOk" classname="org.apache.storm.starter.tools.NthLastModifiedTimeTrackerTest" time="0"/>
  <testcase name="positiveNumTimesToTrackShouldBeOk" classname="org.apache.storm.starter.tools.NthLastModifiedTimeTrackerTest" time="0"/>
  <testcase name="shouldReturnCorrectModifiedTimeEvenWhenNotYetMarkedAsModified" classname="org.apache.storm.starter.tools.NthLastModifiedTimeTrackerTest" time="0.002"/>
  <testcase name="shouldReturnCorrectModifiedTimeEvenWhenNotYetMarkedAsModified" classname="org.apache.storm.starter.tools.NthLastModifiedTimeTrackerTest" time="0.001"/>
  <testcase name="shouldReturnCorrectModifiedTimeEvenWhenNotYetMarkedAsModified" classname="org.apache.storm.starter.tools.NthLastModifiedTimeTrackerTest" time="0"/>
  <testcase name="shouldReturnCorrectModifiedTimeEvenWhenNotYetMarkedAsModified" classname="org.apache.storm.starter.tools.NthLastModifiedTimeTrackerTest" time="0.001"/>
  <testcase name="shouldReturnCorrectModifiedTimeEvenWhenNotYetMarkedAsModified" classname="org.apache.storm.starter.tools.NthLastModifiedTimeTrackerTest" time="0.019"/>
  <testcase name="shouldReturnCorrectModifiedTimeEvenWhenNotYetMarkedAsModified" classname="org.apache.storm.starter.tools.NthLastModifiedTimeTrackerTest" time="0.001"/>
  <testcase name="shouldReturnCorrectModifiedTimeEvenWhenNotYetMarkedAsModified" classname="org.apache.storm.starter.tools.NthLastModifiedTimeTrackerTest" time="0"/>
  <testcase name="shouldReturnCorrectModifiedTimeEvenWhenNotYetMarkedAsModified" classname="org.apache.storm.starter.tools.NthLastModifiedTimeTrackerTest" time="0"/>
  <testcase name="shouldReturnCorrectModifiedTimeWhenMarkedAsModified" classname="org.apache.storm.starter.tools.NthLastModifiedTimeTrackerTest" time="0"/>
  <testcase name="shouldReturnCorrectModifiedTimeWhenMarkedAsModified" classname="org.apache.storm.starter.tools.NthLastModifiedTimeTrackerTest" time="0"/>
  <testcase name="shouldReturnCorrectModifiedTimeWhenMarkedAsModified" classname="org.apache.storm.starter.tools.NthLastModifiedTimeTrackerTest" time="0.001"/>
  <testcase name="shouldReturnCorrectModifiedTimeWhenMarkedAsModified" classname="org.apache.storm.starter.tools.NthLastModifiedTimeTrackerTest" time="0.011"/>
  <testcase name="shouldReturnCorrectModifiedTimeWhenMarkedAsModified" classname="org.apache.storm.starter.tools.NthLastModifiedTimeTrackerTest" time="0.001"/>
  <testcase name="shouldReturnCorrectModifiedTimeWhenMarkedAsModified" classname="org.apache.storm.starter.tools.NthLastModifiedTimeTrackerTest" time="0"/>
  <testcase name="shouldReturnCorrectModifiedTimeWhenMarkedAsModified" classname="org.apache.storm.starter.tools.NthLastModifiedTimeTrackerTest" time="0"/>
  <testcase name="shouldReturnCorrectModifiedTimeWhenMarkedAsModified" classname="org.apache.storm.starter.tools.NthLastModifiedTimeTrackerTest" time="0"/>
  <testcase name="shouldReturnCorrectModifiedTimeWhenMarkedAsModified" classname="org.apache.storm.starter.tools.NthLastModifiedTimeTrackerTest" time="0"/>
  <testcase name="shouldReturnCorrectModifiedTimeWhenMarkedAsModified" classname="org.apache.storm.starter.tools.NthLastModifiedTimeTrackerTest" time="0"/>
  <testcase name="shouldReturnCorrectModifiedTimeWhenMarkedAsModified" classname="org.apache.storm.starter.tools.NthLastModifiedTimeTrackerTest" time="0"/>
  <testcase name="shouldReturnCorrectModifiedTimeWhenMarkedAsModified" classname="org.apache.storm.starter.tools.NthLastModifiedTimeTrackerTest" time="0.021"/>
  <testcase name="shouldReturnCorrectModifiedTimeWhenMarkedAsModified" classname="org.apache.storm.starter.tools.NthLastModifiedTimeTrackerTest" time="0.001"/>
  <testcase name="shouldReturnCorrectModifiedTimeWhenMarkedAsModified" classname="org.apache.storm.starter.tools.NthLastModifiedTimeTrackerTest" time="0"/>
  <testcase name="shouldReturnCorrectModifiedTimeWhenMarkedAsModified" classname="org.apache.storm.starter.tools.NthLastModifiedTimeTrackerTest" time="0"/>
  <testcase name="shouldReturnCorrectModifiedTimeWhenMarkedAsModified" classname="org.apache.storm.starter.tools.NthLastModifiedTimeTrackerTest" time="0.032"/>
  <testcase name="shouldReturnCorrectModifiedTimeWhenMarkedAsModified" classname="org.apache.storm.starter.tools.NthLastModifiedTimeTrackerTest" time="0"/>
  <testcase name="shouldReturnCorrectModifiedTimeWhenMarkedAsModified" classname="org.apache.storm.starter.tools.NthLastModifiedTimeTrackerTest" time="0"/>
  <testcase name="shouldReturnCorrectModifiedTimeWhenMarkedAsModified" classname="org.apache.storm.starter.tools.NthLastModifiedTimeTrackerTest" time="0"/>
  <testcase name="shouldReturnCorrectModifiedTimeWhenMarkedAsModified" classname="org.apache.storm.starter.tools.NthLastModifiedTimeTrackerTest" time="0"/>
  <testcase name="shouldReturnCorrectModifiedTimeWhenMarkedAsModified" classname="org.apache.storm.starter.tools.NthLastModifiedTimeTrackerTest" time="0"/>
  <testcase name="shouldReturnCorrectModifiedTimeWhenMarkedAsModified" classname="org.apache.storm.starter.tools.NthLastModifiedTimeTrackerTest" time="0"/>
  <testcase name="lessThanTwoSlotsShouldThrowIAE" classname="org.apache.storm.starter.tools.SlidingWindowCounterTest" time="0"/>
  <testcase name="lessThanTwoSlotsShouldThrowIAE" classname="org.apache.storm.starter.tools.SlidingWindowCounterTest" time="0"/>
  <testcase name="lessThanTwoSlotsShouldThrowIAE" classname="org.apache.storm.starter.tools.SlidingWindowCounterTest" time="0"/>
  <testcase name="lessThanTwoSlotsShouldThrowIAE" classname="org.apache.storm.starter.tools.SlidingWindowCounterTest" time="0"/>
  <testcase name="lessThanTwoSlotsShouldThrowIAE" classname="org.apache.storm.starter.tools.SlidingWindowCounterTest" time="0"/>
  <testcase name="lessThanTwoSlotsShouldThrowIAE" classname="org.apache.storm.starter.tools.SlidingWindowCounterTest" time="0"/>
  <testcase name="newInstanceShouldHaveEmptyCounts" classname="org.apache.storm.starter.tools.SlidingWindowCounterTest" time="0"/>
  <testcase name="testCounterWithSimulatedRuns" classname="org.apache.storm.starter.tools.SlidingWindowCounterTest" time="0"/>
  <testcase name="testCounterWithSimulatedRuns" classname="org.apache.storm.starter.tools.SlidingWindowCounterTest" time="0"/>
  <testcase name="testCounterWithSimulatedRuns" classname="org.apache.storm.starter.tools.SlidingWindowCounterTest" time="0"/>
  <testcase name="testCounterWithSimulatedRuns" classname="org.apache.storm.starter.tools.SlidingWindowCounterTest" time="0"/>
  <testcase name="testCounterWithSimulatedRuns" classname="org.apache.storm.starter.tools.SlidingWindowCounterTest" time="0.034"/>
  <testcase name="twoOrMoreSlotsShouldBeValid" classname="org.apache.storm.starter.tools.SlidingWindowCounterTest" time="0"/>
  <testcase name="twoOrMoreSlotsShouldBeValid" classname="org.apache.storm.starter.tools.SlidingWindowCounterTest" time="0"/>
  <testcase name="twoOrMoreSlotsShouldBeValid" classname="org.apache.storm.starter.tools.SlidingWindowCounterTest" time="0"/>
  <testcase name="constructorWithNegativeOrZeroTopNShouldThrowIAE" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="constructorWithNegativeOrZeroTopNShouldThrowIAE" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="constructorWithNegativeOrZeroTopNShouldThrowIAE" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="constructorWithNegativeOrZeroTopNShouldThrowIAE" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="constructorWithPositiveTopNShouldBeOk" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="constructorWithPositiveTopNShouldBeOk" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="constructorWithPositiveTopNShouldBeOk" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="constructorWithPositiveTopNShouldBeOk" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="copyConstructorShouldReturnCopy" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="copyConstructorShouldReturnCopy" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="copyConstructorShouldReturnCopy" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="copyConstructorShouldReturnCopy" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="copyConstructorShouldReturnCopy" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="copyConstructorShouldReturnDefensiveCopy" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="copyConstructorShouldReturnDefensiveCopy" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="copyConstructorShouldReturnDefensiveCopy" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="copyConstructorShouldReturnDefensiveCopy" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="copyConstructorShouldReturnDefensiveCopy" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="copyConstructorShouldReturnDefensiveCopy" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="copyShouldReturnCopy" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="copyShouldReturnCopy" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="copyShouldReturnCopy" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="copyShouldReturnCopy" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="copyShouldReturnCopy" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="copyShouldReturnDefensiveCopy" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="copyShouldReturnDefensiveCopy" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="copyShouldReturnDefensiveCopy" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="copyShouldReturnDefensiveCopy" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="copyShouldReturnDefensiveCopy" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="copyShouldReturnDefensiveCopy" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="defaultConstructorShouldSetPositiveTopN" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="shouldCorrectlyRankWhenEmptyAndUpdatedWithOtherRankings" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="shouldCorrectlyRankWhenEmptyAndUpdatedWithOtherRankings" classname="org.apache.storm.starter.tools.RankingsTest" time="0.001"/>
  <testcase name="shouldCorrectlyRankWhenEmptyAndUpdatedWithOtherRankings" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="shouldCorrectlyRankWhenEmptyAndUpdatedWithOtherRankings" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="shouldCorrectlyRankWhenNotEmptyAndUpdatedWithOtherRankings" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="shouldCorrectlyRankWhenNotEmptyAndUpdatedWithOtherRankings" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="shouldCorrectlyRankWhenNotEmptyAndUpdatedWithOtherRankings" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="shouldCorrectlyRankWhenNotEmptyAndUpdatedWithOtherRankings" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="shouldCorrectlyRankWhenUpdatedWithEmptyOtherRankings" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="shouldCorrectlyRankWhenUpdatedWithEmptyOtherRankings" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="shouldCorrectlyRankWhenUpdatedWithEmptyOtherRankings" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="shouldCorrectlyRankWhenUpdatedWithEmptyOtherRankings" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="shouldCorrectlyRankWhenUpdatedWithRankables" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="shouldCorrectlyRankWhenUpdatedWithRankables" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="shouldCorrectlyRankWhenUpdatedWithRankables" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="shouldCorrectlyRankWhenUpdatedWithRankables" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="shouldHaveDefaultConstructor" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="shouldNotRankDuplicateObjectsMoreThanOnce" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="shouldNotRankDuplicateObjectsMoreThanOnce" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="shouldRemoveZeroCounts" classname="org.apache.storm.starter.tools.RankingsTest" time="0.024"/>
  <testcase name="shouldRemoveZeroCounts" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="shouldRemoveZeroCounts" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="shouldRemoveZeroCounts" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="shouldRemoveZeroCounts" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="shouldRemoveZeroCounts" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="shouldRemoveZeroCounts" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="sizeOfRankingsShouldNotGrowBeyondTopN" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="sizeOfRankingsShouldNotGrowBeyondTopN" classname="org.apache.storm.starter.tools.RankingsTest" time="0"/>
  <testcase name="updatingWithNewRankablesShouldBeThreadSafe" classname="org.apache.storm.starter.tools.RankingsTest" time="0.033"/>
  <testcase name="negativeOrZeroNumSlotsShouldThrowIAE" classname="org.apache.storm.starter.tools.SlotBasedCounterTest" time="0"/>
  <testcase name="negativeOrZeroNumSlotsShouldThrowIAE" classname="org.apache.storm.starter.tools.SlotBasedCounterTest" time="0"/>
  <testcase name="negativeOrZeroNumSlotsShouldThrowIAE" classname="org.apache.storm.starter.tools.SlotBasedCounterTest" time="0.021"/>
  <testcase name="negativeOrZeroNumSlotsShouldThrowIAE" classname="org.apache.storm.starter.tools.SlotBasedCounterTest" time="0"/>
  <testcase name="negativeOrZeroNumSlotsShouldThrowIAE" classname="org.apache.storm.starter.tools.SlotBasedCounterTest" time="0"/>
  <testcase name="newInstanceShouldHaveEmptyCounts" classname="org.apache.storm.starter.tools.SlotBasedCounterTest" time="0"/>
  <testcase name="positiveNumSlotsShouldBeOk" classname="org.apache.storm.starter.tools.SlotBasedCounterTest" time="0"/>
  <testcase name="positiveNumSlotsShouldBeOk" classname="org.apache.storm.starter.tools.SlotBasedCounterTest" time="0"/>
  <testcase name="positiveNumSlotsShouldBeOk" classname="org.apache.storm.starter.tools.SlotBasedCounterTest" time="0"/>
  <testcase name="positiveNumSlotsShouldBeOk" classname="org.apache.storm.starter.tools.SlotBasedCounterTest" time="0"/>
  <testcase name="shouldIncrementCount" classname="org.apache.storm.starter.tools.SlotBasedCounterTest" time="0"/>
  <testcase name="shouldIncrementCountOnlyOneSlotAtATime" classname="org.apache.storm.starter.tools.SlotBasedCounterTest" time="0"/>
  <testcase name="shouldReturnNonEmptyCountsWhenAtLeastOneObjectWasCounted" classname="org.apache.storm.starter.tools.SlotBasedCounterTest" time="0"/>
  <testcase name="shouldReturnZeroForNonexistentObject" classname="org.apache.storm.starter.tools.SlotBasedCounterTest" time="0"/>
  <testcase name="wipeSlotShouldSetAllCountsInSlotToZero" classname="org.apache.storm.starter.tools.SlotBasedCounterTest" time="0"/>
  <testcase name="wipeZerosShouldRemoveAnyObjectsWithZeroTotalCount" classname="org.apache.storm.starter.tools.SlotBasedCounterTest" time="0"/>
</testsuite>